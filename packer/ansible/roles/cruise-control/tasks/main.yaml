---
- name: Create user
  user:
    name: "{{ cruise_control_user }}"
    create_home: no

- name: Create directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ cruise_control_user }}"
    group: "{{ cruise_control_user }}"
  loop:
    - "{{ cruise_control_install_path }}"
    - "{{ cruise_control_logging_path }}"

- name: Create temporary directory
  tempfile:
    state: directory
  register: cc_temp_dir

- name: Download archive
  get_url:
    url: "{{ cruise_control_dist_url }}/{{ cruise_control_version }}/linkedin-cruise-control-{{ cruise_control_version }}.tgz"
    dest: "{{ cc_temp_dir.path }}/linkedin-cruise-control.tgz"
    timeout: 30
  register: cc_dist_download
  retries: 3
  delay: 5
  until: not cc_dist_download.failed

- name: Unpack archive
  unarchive:
    src: "{{ cc_temp_dir.path }}/linkedin-cruise-control.tgz"
    dest: "{{ cruise_control_install_path }}/"
    remote_src: yes
    extra_opts:
      - --strip-components=1
    owner: "{{ cruise_control_user }}"
    group: "{{ cruise_control_user }}"
    creates: "{{ cruise_control_build_path }}/kafka-cruise-control-start.sh"

- name: Setup program configuration
  template:
    src: "config/{{ item }}"
    dest: "{{ cruise_control_install_path }}/config/{{ item }}"
    owner: "{{ cruise_control_user }}"
    group: "{{ cruise_control_user }}"
    mode: 0644
  loop:
    - realm.properties

- name: Customize program server configuration
  replace:
    path: "{{ cruise_control_install_path }}/config/cruisecontrol.properties"
    regexp: "{{ item[0] }}"
    replace: "{{ item[1] }}"
  loop:
    - ['capacity\.config\.file=config/capacityJBOD\.json', "#capacity.config.file=config/capacityJBOD.json"]
    - ['#capacity\.config\.file=config/capacity\.json', "capacity.config.file=config/capacity.json"]
    - ['webserver\.accesslog\.path=access\.log', "webserver.accesslog.path={{ cruise_control_logging_path }}/access.log"]

- name: Add HTTPS settings to configuration
  blockinfile:
    path: "{{ cruise_control_install_path }}/config/cruisecontrol.properties"
    block: |
      # Configurations for SSL/TLS
      # ==========================
      ssl.enabled.protocols=TLSv1.2
      
      # HTTPS settings
      webserver.ssl.enable=false
      webserver.ssl.keystore.location={{ cruise_control_install_path }}/config/default.p12
      webserver.ssl.keystore.password=changeit
      webserver.ssl.keystore.type=PKCS12
      webserver.ssl.protocol=TLS
      
      # Configurations for security and authentication
      # ==========================
      webserver.security.enable=false
      webserver.auth.credentials.file={{ cruise_control_install_path }}/config/realm.properties
    insertafter: EOF

- name: Customize program logging configuration
  replace:
    path: "{{ cruise_control_install_path }}/config/log4j.properties"
    regexp: "{{ item[0] }}"
    replace: "{{ item[1] }}"
  loop:
    - ['property\.filename=.*', "property.filename={{ cruise_control_logging_path }}"]

- name: Install service units
  template:
    src: systemd/cruisecontrol.service
    dest: /etc/systemd/system/cruisecontrol.service
    owner: root
    mode: 0644

- name: Copy Metrics Reporter library in Kafka folder
  copy:
    src: "{{ cruise_control_install_path }}/cruise-control-metrics-reporter/build/libs/cruise-control-metrics-reporter-{{ cruise_control_version }}.jar"
    dest: "{{ kafka_install_path }}/libs/"
    remote_src: yes
    owner: "{{ kafka_user }}"
    group: "{{ kafka_user }}"
  when: kafka_install_path and kafka_user

- name: Configure Metrics Reporter in Kafka settings
  blockinfile:
    path: "{{ kafka_install_path }}/config/server.properties"
    block: |
      ############################# Metrics Settings #############################

      metric.reporters=com.linkedin.kafka.cruisecontrol.metricsreporter.CruiseControlMetricsReporter

  when: kafka_install_path and kafka_user

- name: Download UI archive
  unarchive:
    src: "{{ cruise_control_ui_dist_url }}/v{{ cruise_control_ui_version }}/cruise-control-ui-{{ cruise_control_ui_version }}.tar.gz"
    dest: "{{ cruise_control_install_path }}/"
    remote_src: yes
    owner: "{{ cruise_control_user }}"
    group: "{{ cruise_control_user }}"
    creates: "{{ cruise_control_build_path }}/cruise-control-ui/"
